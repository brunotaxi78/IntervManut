// <auto-generated />
using System;
using IntervManut.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntervManut.Migrations
{
    [DbContext(typeof(IntervManutContext))]
    [Migration("20201224193413_MigracaoInicial")]
    partial class MigracaoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("IntervManut.Models.Equipamento", b =>
                {
                    b.Property<int>("EquipamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodAtivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodEquipamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LinhaProdId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("EquipamentoId");

                    b.HasIndex("LinhaProdId");

                    b.ToTable("Equipamento");

                    b.HasData(
                        new
                        {
                            EquipamentoId = 1,
                            CodEquipamento = "0001",
                            LinhaProdId = 1,
                            Nome = "Outro Equipamento"
                        },
                        new
                        {
                            EquipamentoId = 2,
                            CodEquipamento = "0002",
                            LinhaProdId = 2,
                            Nome = "Outro Equipamento"
                        },
                        new
                        {
                            EquipamentoId = 3,
                            CodEquipamento = "0003",
                            LinhaProdId = 3,
                            Nome = "Outro Equipamento"
                        });
                });

            modelBuilder.Entity("IntervManut.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("Estado");

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Descricao = "Criada"
                        },
                        new
                        {
                            EstadoId = 2,
                            Descricao = "Agendada"
                        },
                        new
                        {
                            EstadoId = 3,
                            Descricao = "Aguarda Material"
                        },
                        new
                        {
                            EstadoId = 4,
                            Descricao = "Concluída"
                        });
                });

            modelBuilder.Entity("IntervManut.Models.Intervencao", b =>
                {
                    b.Property<int>("IntervencaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("ResumoTrabalho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoIntevencaoId")
                        .HasColumnType("int");

                    b.HasKey("IntervencaoId");

                    b.HasIndex("EquipamentoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TecnicoId");

                    b.HasIndex("TipoIntevencaoId");

                    b.ToTable("Intervencao");
                });

            modelBuilder.Entity("IntervManut.Models.IntervencaoPeca", b =>
                {
                    b.Property<int>("IntervencaoPecaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IntervencaoId")
                        .HasColumnType("int");

                    b.Property<int>("PecaId")
                        .HasColumnType("int");

                    b.HasKey("IntervencaoPecaId");

                    b.HasIndex("IntervencaoId");

                    b.HasIndex("PecaId");

                    b.ToTable("IntervencaoPeca");
                });

            modelBuilder.Entity("IntervManut.Models.LinhaProd", b =>
                {
                    b.Property<int>("LinhaProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodLinha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinhaProdId");

                    b.ToTable("LinhaProd");

                    b.HasData(
                        new
                        {
                            LinhaProdId = 1,
                            CodLinha = "LP1",
                            Descricao = "Linha de Pão 1"
                        },
                        new
                        {
                            LinhaProdId = 2,
                            CodLinha = "LP2",
                            Descricao = "Linha de Pão 2"
                        },
                        new
                        {
                            LinhaProdId = 3,
                            CodLinha = "LP3",
                            Descricao = "Linha de Pão 3"
                        });
                });

            modelBuilder.Entity("IntervManut.Models.Peca", b =>
                {
                    b.Property<int>("PecaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodPeca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PecaId");

                    b.ToTable("Peca");
                });

            modelBuilder.Entity("IntervManut.Models.Tecnico", b =>
                {
                    b.Property<int>("TecnicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("TipoTecId")
                        .HasColumnType("int");

                    b.HasKey("TecnicoId");

                    b.HasIndex("TipoTecId");

                    b.ToTable("Tecnico");
                });

            modelBuilder.Entity("IntervManut.Models.TecnicoIntervencao", b =>
                {
                    b.Property<int>("TecnicoIntervencaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IntervencaoId")
                        .HasColumnType("int");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("int");

                    b.HasKey("TecnicoIntervencaoId");

                    b.HasIndex("IntervencaoId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("TecnicoIntervencao");
                });

            modelBuilder.Entity("IntervManut.Models.TipoIntervencao", b =>
                {
                    b.Property<int>("TipoIntervencaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoIntervencaoId");

                    b.ToTable("TipoIntervencao");

                    b.HasData(
                        new
                        {
                            TipoIntervencaoId = 1,
                            Descricao = "Preventiva"
                        },
                        new
                        {
                            TipoIntervencaoId = 2,
                            Descricao = "Curativa"
                        },
                        new
                        {
                            TipoIntervencaoId = 3,
                            Descricao = "Melhoria"
                        },
                        new
                        {
                            TipoIntervencaoId = 4,
                            Descricao = "Serras"
                        });
                });

            modelBuilder.Entity("IntervManut.Models.TipoTec", b =>
                {
                    b.Property<int>("TipoTecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoTecId");

                    b.ToTable("TipoTec");

                    b.HasData(
                        new
                        {
                            TipoTecId = 1,
                            Tipo = "Interno"
                        },
                        new
                        {
                            TipoTecId = 2,
                            Tipo = "Externo"
                        },
                        new
                        {
                            TipoTecId = 3,
                            Tipo = "Temporário"
                        });
                });

            modelBuilder.Entity("IntervManut.Models.Equipamento", b =>
                {
                    b.HasOne("IntervManut.Models.LinhaProd", "LinhaProd")
                        .WithMany("Equioamentos")
                        .HasForeignKey("LinhaProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LinhaProd");
                });

            modelBuilder.Entity("IntervManut.Models.Intervencao", b =>
                {
                    b.HasOne("IntervManut.Models.Equipamento", "Equipamento")
                        .WithMany("Intervencoes")
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntervManut.Models.Estado", "Estado")
                        .WithMany("Intervencoes")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntervManut.Models.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntervManut.Models.TipoIntervencao", "TipoIntervencao")
                        .WithMany("Intervencoes")
                        .HasForeignKey("TipoIntevencaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipamento");

                    b.Navigation("Estado");

                    b.Navigation("Tecnico");

                    b.Navigation("TipoIntervencao");
                });

            modelBuilder.Entity("IntervManut.Models.IntervencaoPeca", b =>
                {
                    b.HasOne("IntervManut.Models.Intervencao", "Intervencao")
                        .WithMany("IntervencoesPecas")
                        .HasForeignKey("IntervencaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntervManut.Models.Peca", "Peca")
                        .WithMany("IntervencoesPecas")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intervencao");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("IntervManut.Models.Tecnico", b =>
                {
                    b.HasOne("IntervManut.Models.TipoTec", "TipoTec")
                        .WithMany("Tecnicos")
                        .HasForeignKey("TipoTecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTec");
                });

            modelBuilder.Entity("IntervManut.Models.TecnicoIntervencao", b =>
                {
                    b.HasOne("IntervManut.Models.Intervencao", "Intervencao")
                        .WithMany()
                        .HasForeignKey("IntervencaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntervManut.Models.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intervencao");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("IntervManut.Models.Equipamento", b =>
                {
                    b.Navigation("Intervencoes");
                });

            modelBuilder.Entity("IntervManut.Models.Estado", b =>
                {
                    b.Navigation("Intervencoes");
                });

            modelBuilder.Entity("IntervManut.Models.Intervencao", b =>
                {
                    b.Navigation("IntervencoesPecas");
                });

            modelBuilder.Entity("IntervManut.Models.LinhaProd", b =>
                {
                    b.Navigation("Equioamentos");
                });

            modelBuilder.Entity("IntervManut.Models.Peca", b =>
                {
                    b.Navigation("IntervencoesPecas");
                });

            modelBuilder.Entity("IntervManut.Models.TipoIntervencao", b =>
                {
                    b.Navigation("Intervencoes");
                });

            modelBuilder.Entity("IntervManut.Models.TipoTec", b =>
                {
                    b.Navigation("Tecnicos");
                });
#pragma warning restore 612, 618
        }
    }
}
